<?php

// load field hooks
module_load_include('inc', 'ting_infomedia', 'includes/ting_infomedia.field');
module_load_include('inc', 'ting_infomedia', 'includes/ting_infomedia.webservice');


/**
 * Implements hook_ting_client_webservice (@see ting_client.module)
 * this module does not implement its own request, but uses
 * ting-client/lib/request/TingClientInfomediaArticleRequest
 * */
function ting_infomedia_ting_client_webservice() {
  $ret = array();
  $ret['infomediaArticle']['class'] = 'TingClientInfomediaArticleRequest';
  $ret['infomediaArticle']['url'] = 'ting_infomedia_url';
  
  return $ret;
}

/**
 * Implements hook_menu
 */
function ting_infomedia_menu() {
  $items['overlay/infomedia/%'] = array(
    'title' => 'Infomedia',
    'page callback' => 'ting_infomedia_view',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}


/**
 * Page callback function
 *
 * Return a render array
 */
function ting_infomedia_view($id) {
return array(
    '#markup' => '<div id="article-wrapper">' . render(ting_infomedia_parse_article($id)). '</div>',
    '#theme' => 'ting_infomedia_article',
    '#attached' => array(
      'css' => array(drupal_get_path('module', 'ting_infomedia') . '/css/ting_infomedia_article_view.css'),
    ),
  );
}


/**
 * Implements hook_theme
 * Set template for viewing ting_infomedia articles.
 * Set theme-function for displaying a link (field) to ting_infomedia
 *
 * @existing; array of existing themes
 * @type; which type is being process (module,base_theme_engine,theme_engine,base_theme,theme)
 * @theme; name of $type being processed
 * @path; directory path of theme or module
 *
 * return a render array http://randyfay.com/node/79
 */
function ting_infomedia_theme( $existing, $type, $theme, $path ) {
  return array(
    'ting_infomedia_button' => array(
      'variables' => array('ting_infomedia_button' => ''),
      'template' => 'theme/ting-infomedia-button',
    ),
    // page view definitions - view articles
    'ting_infomedia_article' => array(
      'template' => 'theme/ting-infomedia-article-view',
      'render element' => 'element',
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter (ting_admin_ting_settings) (ie. Ding2)
 * Adding infomedia url form field to ting configuration form
 */
/*
function ting_infomedia_form_ting_admin_ting_settings_alter(&$form, &$form_state, $form_id) {
  $form['infomedia'] = array(
    '#type' => 'fieldset',
    '#title' => t('Infomedia settings'),
    '#description' => t('Settings for bibdk Infomedia', array(), array('context' => 'ting_infomedia')),
    '#weight' => -3,
  );

  $form['infomedia']['ting_infomedia_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Infomedia web service URL', array(), array('context' => 'ting_infomedia')),
    '#description' => t('URL to the infomedia webservice (access to infomedia article base) , e.g. http://useraccessinfomedia.addi.dk/1.2/'),
    '#required' => TRUE,
    '#default_value' => variable_get('ting_infomedia_url', ''),
  );
}
*/


/**
 * Implements hook_form_FORM_ID_alter (ting_client_admin_webservices_settings) (ie. Bibliotek.dk)
 * Creates a field for adding a URL for the Helpdesk webservice
 */
function ting_infomedia_form_ting_client_admin_webservices_settings_alter(&$form, &$form_state, $form_id) {
  $form['infomedia'] = array(
    '#type' => 'fieldset',
    '#title' => t('Infomedia settings'),
    '#description' => t('Settings for bibdk Infomedia', array(), array('context' => 'ting_infomedia')),
    '#weight' => -3,
  );

  $form['infomedia']['ting_infomedia_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Infomedia web service URL', array(), array('context' => 'ting_infomedia')),
    '#description' => t('URL to the infomedia webservice (access to infomedia article base) , e.g. http://useraccessinfomedia.addi.dk/1.2/', array(), array('context' => 'ting_infomedia')),
    '#required' => TRUE,
    '#default_value' => variable_get('ting_infomedia_url', ''),
  );
}


/**
 * Implements hook_ting_openformat_getobject_params.
 *
 * Add parameters to getObject request.
 */
function ting_infomedia_ting_openformat_getobject_params() {
  return array(
    'relationData' => 'full',
  );
}


/**
 * retrive article from infomedia. Parse for errors, clean html and add html for errorhandling if needed.
 * return the parsed html
 */
function ting_infomedia_parse_article($id) {
  
  $libraryList = bibdk_navfors_get_library_list('infomedia');
  dpm($libraryList);
  
  $html = FALSE;

  $obj = ting_infomedia_get_article($id);

  return '<p>foor bark</p>';

  if( !empty($obj->error)) {
    return ting_infomedia_parse_for_errors($obj);
  }
  else {
    foreach($obj->parts as $part=>$val) {
      if($message = ting_infomedia_parse_for_article_error($val) ) {
        $val['article'] = $message;
      }
      $html = $val['article'];
      // for now simply return the first article. TODO handle more articles
      ting_infomedia_clean_html($html);
    }
  }
  return $html;
}


